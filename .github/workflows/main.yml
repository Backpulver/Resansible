name: Resansible main workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

    #   - name: Run Ansible-Lint
    #     uses: ansible/ansible-lint-action@main
        # with:
        #   targets: "./Ansible/"

      - name: Install ShellCheck
        run: sudo apt-get install shellcheck

      - name: Run ShellCheck
        run: shellcheck resansible.sh
      
      - name: Markdown Lint changelog file
        uses: avto-dev/markdown-lint@v1
        with:
          rules: '/lint/rules/changelog.js'
          config: '/lint/config/changelog.yml'
          args: './CHANGELOG.md'

      - name: Check link in markdown files
        uses: gaurav-nelson/github-action-markdown-link-check@v1

  Security-Scans:
    needs: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scan: [Sonarcloud-Code-Scan, SpectralOps-Vulnerability-Scan, Bandit-SAST-Checker, Git-Leaks-Scan, Checkov-Scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SonarCloud scan
        if: matrix.scan == 'Sonarcloud-Code-Scan'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    #   - name: SpectralOps Vulnerability Scan
    #     if: matrix.scan == 'SpectralOps-Vulnerability-Scan'
    #     uses: spectralops/spectral-github-action@v4
    #     with:
    #       spectral-dsn: ${{ secrets.SPECTRAL_DSN }}
    #       spectral-args: scan --ok

      - name: Bandit SAST Checker
        if: matrix.scan == 'Bandit-SAST-Checker'
        uses: jpetrucciani/bandit-check@main
        with:
          path: '.'

    #   - name: GitLeaks Scan
    #     if: matrix.scan == 'Git-Leaks-Scan'
    #     uses: gitleaks/gitleaks-action@v2
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkov Scan
        if: matrix.scan == 'Checkov-Scan'
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./Kubernetes/
          checkov_args: --framework kubernetes

  Build-And-Publish:
    needs: Security-Scans
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build docker image
        run: docker build -t resansible .
  
      - name: Add tag to docker image
        run: docker tag resansible ${{ secrets.DOCKERHUB_USERNAME }}/resansible

      - name: Snyk Docker Image Scan
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test --severity-threshold=critical --docker resansible
      
      - name: Publish to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/resansible
  
  Deploy-With-Docker:
    needs: Build-And-Publish
    runs-on: self-hosted
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Stop previous deployment
        run: |
          docker-compose down

      - name: Deploy
        run: |
          docker-compose -f ~/Resansible/docker-compose.yml up -d
